---
project:
  title: "day-9-10"
  output-dir: docs

author: "Nina Hayford"
date: "2025-03-03"
format:
  html:
    self-contained: true
execute: 
  echo: true
---
#1. Use the help(?) function to learn more about the dataset.
```{r}
?airquality
```

#2. Use vis_dat to check out the data. Does it need cleaning?
Yes.
```{r}
library(visdat)
vis_dat(airquality)
```

#3. Fit a linear model to the cleaned data to predict Ozone from one of the possible predictors of your choosing. Why did you chose that variable?
Temperature affects air quality due to its role in chemical reactions in the atmosphere.
```{r}
airquality_clean <- na.omit(airquality)
model <- lm(Ozone ~ Temp, data = airquality_clean)
 (cor(airquality_clean$Ozone, airquality_clean$Temp)
)
```

#4. Using summary(),  does this seem like a valid model? 
Yes. 
```{r}
summary(model)
```

#5. Explain the R^2 found in a sentance.
The model explains 0.49% of the variability in Ozone levels using Temperature as a predictor.
```{r}
summary(model)$r.squared
```

#6. Use broom:augment to predict the Ozone of the cleaned data.
```{r}
library(broom)
a <- augment(model)
```

#7. Use ggplot2 to plot the actual vs. predicted Ozone. 
```{r}
library(ggplot2)
ggplot(a, aes(x = .fitted, y = Ozone)) +
     geom_point() +
     geom_abline(intercept = 0, slope = 1, color = "red") +
     labs(
         title = "Actual vs Predicted Ozone Levels",
         x = "Predicted Ozone",
         y = "Actual Ozone",
         subtitle = paste("Correlation:", round(cor(a$Ozone, a$.fitted), 2))
     )
```
